==37336== Memcheck, a memory error detector
==37336== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==37336== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==37336== Command: ./a.out
==37336== Parent PID: 23827
==37336== 
==37336== Invalid read of size 4
==37336==    at 0x108DAC: Tree<int>::insertNodeHelper(TreeNode<int>*&, int const&) (in /home/mbeltz/CS341/Project 4/a.out)
==37336==    by 0x108DA1: Tree<int>::insertNodeHelper(TreeNode<int>*&, int const&) (in /home/mbeltz/CS341/Project 4/a.out)
==37336==    by 0x108CD4: Tree<int>::insertNode(int const&) (in /home/mbeltz/CS341/Project 4/a.out)
==37336==    by 0x108B7B: main (in /home/mbeltz/CS341/Project 4/a.out)
==37336==  Address 0x18 is not stack'd, malloc'd or (recently) free'd
==37336== 
==37336== 
==37336== Process terminating with default action of signal 11 (SIGSEGV)
==37336==  Access not within mapped region at address 0x18
==37336==    at 0x108DAC: Tree<int>::insertNodeHelper(TreeNode<int>*&, int const&) (in /home/mbeltz/CS341/Project 4/a.out)
==37336==    by 0x108DA1: Tree<int>::insertNodeHelper(TreeNode<int>*&, int const&) (in /home/mbeltz/CS341/Project 4/a.out)
==37336==    by 0x108CD4: Tree<int>::insertNode(int const&) (in /home/mbeltz/CS341/Project 4/a.out)
==37336==    by 0x108B7B: main (in /home/mbeltz/CS341/Project 4/a.out)
==37336==  If you believe this happened as a result of a stack
==37336==  overflow in your program's main thread (unlikely but
==37336==  possible), you can try to increase the size of the
==37336==  main thread stack using the --main-stacksize= flag.
==37336==  The main thread stack size used in this run was 8388608.
==37336== 
==37336== HEAP SUMMARY:
==37336==     in use at exit: 256 bytes in 8 blocks
==37336==   total heap usage: 9 allocs, 1 frees, 72,960 bytes allocated
==37336== 
==37336== LEAK SUMMARY:
==37336==    definitely lost: 0 bytes in 0 blocks
==37336==    indirectly lost: 0 bytes in 0 blocks
==37336==      possibly lost: 0 bytes in 0 blocks
==37336==    still reachable: 256 bytes in 8 blocks
==37336==         suppressed: 0 bytes in 0 blocks
==37336== Reachable blocks (those to which a pointer was found) are not shown.
==37336== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==37336== 
==37336== For counts of detected and suppressed errors, rerun with: -v
==37336== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
